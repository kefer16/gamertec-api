// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

model Api_envio {
  api_envio_id   Int      @id @default(autoincrement()) @db.Int
  codigo_envio   String   @unique
  tipo_peticion  String   @db.VarChar(10)
  url            String   @db.VarChar(150)
  parametros     String   @db.VarChar(max)
  llave          String   @db.VarChar(max)
  cabeceras      String   @db.VarChar(max)
  tipo_contenido String   @db.VarChar(max)
  cuerpo         String   @db.VarChar(max)
  respuesta      String   @db.VarChar(max)
  agente         String   @db.VarChar(150)
  fecha_creacion DateTime @db.DateTime
  fk_usuario     Int      @db.Int
  cls_usuario    Usuario  @relation(fields: [fk_usuario], references: [usuario_id])
  estatus        Int      @db.Int
}

model Error {
  error_id       Int      @id @default(autoincrement()) @db.Int
  codigo         Int      @db.Int
  linea          Int      @db.Int
  objeto         String   @db.VarChar(max)
  mensaje        String   @db.VarChar(max)
  servidor       String   @db.VarChar(150)
  fecha_registro DateTime @db.DateTime
  fk_usuario     Int      @db.Int
  cls_usuario    Usuario  @relation(fields: [fk_usuario], references: [usuario_id])
}

model Usuario {
  usuario_id          Int               @id @default(autoincrement()) @db.Int
  nombre              String            @db.VarChar(150)
  apellido            String            @db.VarChar(150)
  correo              String            @unique @db.VarChar(150)
  usuario             String            @unique @db.VarChar(150)
  contrasenia         String?           @db.VarChar(150)
  dinero              Float             @db.Money
  foto                String            @db.VarChar(max)
  direccion           String            @unique @db.VarChar(500)
  telefono            String            @db.VarChar(30)
  fecha_registro      DateTime          @db.DateTime
  activo              Boolean           @db.Bit
  fk_privilegio       Int               @db.Int
  fecha_inicial       DateTime?         @db.DateTime2
  fecha_final         DateTime?         @db.DateTime2
  privilegio          Privilegio        @relation(fields: [fk_privilegio], references: [privilegio_id])
  lst_api_envio       Api_envio[]
  lst_error           Error[]
  lst_carrito         Carrito[]
  lst_comentario      Comentario[]
  lst_pedido_cabecera Pedido_cabecera[]
  Compra_cabecera     Compra_cabecera[]
}

model Usuario_historial {
  usuario_id     Int      @id @default(autoincrement()) @db.Int
  nombre         String   @db.VarChar(150)
  apellido       String   @db.VarChar(150)
  correo         String   @db.VarChar(150)
  usuario        String   @db.VarChar(150)
  contrasenia    String?  @db.VarChar(150)
  direccion      String?  @db.VarChar(500)
  telefono       String?  @db.VarChar(30)
  dinero         Float    @db.Money
  foto           String   @db.VarChar(max)
  fecha_registro DateTime @db.DateTime
  activo         Boolean  @db.Bit
  fk_privilegio  Int      @db.Int
  fecha_inicial  DateTime @db.DateTime2
  fecha_final    DateTime @db.DateTime2
}

model Privilegio {
  privilegio_id  Int       @id @default(autoincrement()) @db.Int
  tipo           String    @unique @db.VarChar(50)
  activo         Boolean   @db.Bit
  abreviatura    String    @unique @db.VarChar(3)
  fecha_registro DateTime  @db.DateTime
  lst_usuario    Usuario[]
}

model Carrito {
  carrito_id     Int      @id @default(autoincrement()) @db.Int
  cantidad       Int      @db.Int
  precio_total   Float    @db.Money
  despues        Boolean  @db.Bit
  pedido         Boolean  @db.Bit
  fecha_registro DateTime @db.DateTime
  activo         Boolean  @db.Bit
  fk_usuario     Int      @db.Int
  fk_modelo      Int      @db.Int
  cls_usuario    Usuario  @relation(fields: [fk_usuario], references: [usuario_id])
  cls_modelo     Modelo   @relation(fields: [fk_modelo], references: [modelo_id])
}

model Categoria {
  categoria_id        Int      @id @default(autoincrement()) @db.Int
  nombre              String   @db.VarChar(45)
  activo              Int      @db.Int
  fecha_registro      DateTime @db.DateTime
  fecha_actualizacion DateTime @db.DateTime
  lst_marca           Marca[]
}

model Marca {
  marca_id       Int       @id @default(autoincrement()) @db.Int
  nombre         String    @db.VarChar(45)
  activo         Boolean   @db.Bit
  fecha_registro DateTime  @db.DateTime
  fk_categoria   Int       @db.Int
  cls_categoria  Categoria @relation(fields: [fk_categoria], references: [categoria_id])
  lst_modelo     Modelo[]
}

model Modelo {
  modelo_id          Int              @id @default(autoincrement()) @db.Int
  nombre             String           @db.VarChar(45)
  descripcion        String           @db.VarChar(100)
  foto               String           @db.VarChar(max)
  caracteristicas    String           @db.VarChar(max)
  color              String           @db.VarChar(45)
  precio             Float            @db.Money
  fecha_registro     DateTime         @db.DateTime
  stock              Int              @db.Int
  numero_series      String           @db.VarChar(max)
  activo             Boolean          @db.Bit
  fk_marca           Int              @db.Int
  fk_categoria       Int              @db.Int
  cls_marca          Marca            @relation(fields: [fk_marca], references: [marca_id])
  lst_carrito        Carrito[]
  lst_comentario     Comentario[]
  lst_producto       Producto[]
  lst_pedido_detalle Pedido_detalle[]
  lst_compra_detalle Compra_detalle[]
}

model Producto {
  producto_id                 Int                       @id @default(autoincrement()) @db.Int
  numero_serie                String                    @unique @db.VarChar(11)
  activo                      Boolean                   @db.Bit
  fecha_registro              DateTime                  @db.DateTime
  fk_modelo                   Int                       @db.Int
  fk_marca                    Int                       @db.Int
  fk_categoria                Int                       @db.Int
  cls_modelo                  Modelo                    @relation(fields: [fk_modelo], references: [modelo_id])
  lst_pedido_detalle_producto Pedido_detalle_producto[]
}

model Comentario {
  comentario_id  Int      @id @default(autoincrement()) @db.Int
  valoracion     Int      @db.Int
  usuario        String   @db.VarChar(100)
  titulo         String   @db.VarChar(100)
  mensaje        String   @db.VarChar(600)
  fecha_registro DateTime @db.DateTime
  activo         Boolean  @db.Bit
  fk_usuario     Int      @db.Int
  fk_modelo      Int      @db.Int
  cls_usuario    Usuario  @relation(fields: [fk_usuario], references: [usuario_id])
  cls_modelo     Modelo   @relation(fields: [fk_modelo], references: [modelo_id])
}

model Departamento {
  departamento_id Int         @id @db.Int
  nombre          String      @db.VarChar(45)
  costo_envio     Float       @db.Money
  activo          Boolean     @db.Bit
  lst_provincia   Provincia[]
}

model Provincia {
  provincia_id     Int          @id @db.Int
  nombre           String       @db.VarChar(45)
  activo           Boolean      @db.Bit
  fk_departamento  Int          @db.Int
  cls_departamento Departamento @relation(fields: [fk_departamento], references: [departamento_id])
  lst_distrito     Distrito[]
}

model Distrito {
  distrito_id         Int               @id @db.Int
  nombre              String            @db.VarChar(45)
  activo              Boolean           @db.Bit
  costo_envio         Float             @db.Money
  fk_provincia        Int               @db.Int
  fk_departamento     Int               @db.Int
  cls_provincia       Provincia         @relation(fields: [fk_provincia], references: [provincia_id])
  lst_pedido_cabecera Pedido_cabecera[]
  Compra_cabecera     Compra_cabecera[]
}

model Pedido_cabecera {
  pedido_cabecera_id Int              @id @default(autoincrement()) @db.Int
  codigo             String           @unique @db.VarChar(15)
  direccion          String           @db.VarChar(200)
  telefono           String           @db.VarChar(15)
  sub_total          Float            @db.Money
  costo_envio        Float            @db.Money
  total              Float            @db.Money
  fecha_registro     DateTime         @db.DateTime
  activo             Boolean          @db.Bit
  fk_distrito        Int              @db.Int
  fk_usuario         Int              @db.Int
  comprado           Boolean          @db.Bit
  cls_distrito       Distrito         @relation(fields: [fk_distrito], references: [distrito_id])
  cls_usuario        Usuario          @relation(fields: [fk_usuario], references: [usuario_id])
  lst_pedido_detalle Pedido_detalle[]
  // Compra_cabecera    Compra_cabecera[]
}

model Pedido_detalle {
  pedido_detalle_id           Int                       @id @default(autoincrement()) @db.Int
  item                        Int                       @db.Int
  cantidad                    Int                       @db.Int
  precio                      Float                     @db.Money
  total                       Float                     @db.Money
  fecha_registro              DateTime                  @db.DateTime
  comprado                    Boolean                   @db.Bit
  activo                      Boolean                   @db.Bit
  fk_modelo                   Int                       @db.Int
  fk_pedido_cabecera          Int                       @db.Int
  cls_modelo                  Modelo                    @relation(fields: [fk_modelo], references: [modelo_id])
  cls_pedido_cabecera         Pedido_cabecera           @relation(fields: [fk_pedido_cabecera], references: [pedido_cabecera_id])
  lst_pedido_detalle_producto Pedido_detalle_producto[]
}

model Pedido_detalle_producto {
  pedido_detalle_producto_id Int            @id @default(autoincrement()) @db.Int
  item                       Int            @db.Int
  numero_serie               String         @db.VarChar(11)
  fecha_registro             DateTime       @db.DateTime
  fk_producto                Int            @db.Int
  fk_pedido_detalle          Int            @db.Int
  cls_pedido_detalle         Pedido_detalle @relation(fields: [fk_pedido_detalle], references: [pedido_detalle_id])
  lst_producto               Producto[]
}

model Compra_cabecera {
  compra_cabecera_id Int              @id @default(autoincrement()) @db.Int
  codigo             String           @db.VarChar(15)
  direccion          String           @db.VarChar(200)
  telefono           String           @db.VarChar(15)
  sub_total          Float            @db.Money
  costo_envio        Float            @db.Money
  total              Float            @db.Money
  fecha_registro     DateTime         @db.DateTime
  activo             Boolean          @db.Bit
  fk_distrito        Int              @db.Int
  fk_pedido_cabecera Int              @db.Int
  fk_usuario         Int              @db.Int
  cls_distito        Distrito         @relation(fields: [fk_distrito], references: [distrito_id])
  cls_usuario        Usuario          @relation(fields: [fk_usuario], references: [usuario_id])
  lst_compra_detalle Compra_detalle[]
}

model Compra_detalle {
  compra_detalle_id   Int             @id @default(autoincrement()) @db.Int
  item                Int             @db.Int
  cantidad            Int             @db.Int
  precio              Float           @db.Money
  total               Float           @db.Money
  serie               String          @db.VarChar(36)
  fecha_registro      DateTime        @db.DateTime
  activo              Boolean         @db.Bit
  fk_modelo           Int             @db.Int
  fk_pedido_detalle   Int             @db.Int
  fk_compra_cabecera  Int             @db.Int
  cls_compra_cabecera Compra_cabecera @relation(fields: [fk_compra_cabecera], references: [compra_cabecera_id])
  cls_modelo          Modelo          @relation(fields: [fk_modelo], references: [modelo_id])
}
